# Copyright (c) 2023 NXP Semiconductors
# SPDX-License-Identifier: Apache-2.0

description: |
  PPM input driver using NXP MCUX General-Purpose Timer (GPT)
  This driver implements the PPM protocol used in RC radio
  to send out analogue joystick and switches output.
  The driver binds this to the Zephyr input system using INPUT_EV_CODES

  The following examples defines a a binding of 2 joysticks using 4 PPM channels

  &gpt5 {
    compatible = "nxp,gpt-ppm-input";
    pinctrl-0 = <&pinmux_gpt_ppm>;
    pinctrl-names = "default";
    capture-channel = <1>;
    right_stick_x {
      channel = <1>;
      label = "Right stick x";
      type = <INPUT_EV_ABS>;
      zephyr,code = <INPUT_ABS_RX>;
    };
    right_stick_y {
      channel = <2>;
      label = "Right stick y";
      type = <INPUT_EV_ABS>;
      zephyr,code = <INPUT_ABS_RY>;
    };
    left_stick_x {
      channel = <3>;
      label = "Left stick x";
      type = <INPUT_EV_ABS>;
      zephyr,code = <INPUT_ABS_X>;
    };
    left_stick_y {
      channel = <4>;
      label = "Left stick y";
      type = <INPUT_EV_ABS>;
      zephyr,code = <INPUT_ABS_Y>;
    };
  };

compatible: "nxp,gpt-ppm-input"

include: [base.yaml, pinctrl-device.yaml]

properties:
  reg:
    required: true

  interrupts:
    required: true

  pinctrl-0:
    required: true

  pinctrl-names:
    required: true

  gptfreq:
    type: int
    required: true
    description: gpt frequences

  capture-channel:
    type: int
    required: true

child-binding:
  description: PPM Channel to input-event-code binding
  properties:
    channel:
      type: int
      required: true
      description: PPM input channel
    label:
      type: string
      description: Descriptive name of the key
    type:
      type: int
      required: true
      description: Input event types see INPUT_EV_CODES
    zephyr,code:
      type: int
      required: true
      description: Code to emit.
